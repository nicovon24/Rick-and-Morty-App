{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Desktop\\\\henry\\\\modules\\\\FT-M2\\\\rick_and_morty\\\\my-app\\\\src\\\\components\\\\Characters\\\\Character.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styles from \"./Characters.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Character(_ref) {\n  _s();\n  let {\n    character\n  } = _ref;\n  let [firstEpisodeName, setFirstEpisodeName] = useState(\"\");\n  let [statusColor, setStatusColor] = useState(\"\");\n\n  //getting first episode name\n  let firstEpisodeURL = character.episode[0];\n  fetch(firstEpisodeURL).then(resp => resp.json()).then(data => setFirstEpisodeName(data.name));\n\n  //getting the status color\n  useEffect(() => {\n    switch (character.status) {\n      case \"Alive\":\n        setStatusColor(\"alive\");\n        break;\n      case \"Dead\":\n        setStatusColor(\"dead\");\n        break;\n      case \"unknown\":\n        setStatusColor(\"unknown\");\n        break;\n      default:\n        setStatusColor(\"unknown\");\n        break;\n    }\n  }, [character]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.character_item,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/${character.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.character_info,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `character-name`,\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.character_statusColor} ${styles[statusColor]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [character.status, \" - \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: character.species\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-origin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.character_subtitle,\n          children: \"Origin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.origin.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-first_episode\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.character_subtitle,\n          children: \"First seen in:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: firstEpisodeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-num_episodes\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.character_subtitle,\n          children: \"Number of episodes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.episode.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(Character, \"6FajVhEpae2J/hxT7w/v3qzQeAk=\");\n_c = Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["useEffect","useState","styles","Link","Character","character","firstEpisodeName","setFirstEpisodeName","statusColor","setStatusColor","firstEpisodeURL","episode","fetch","then","resp","json","data","name","status","character_item","id","image","character_info","character_statusColor","species","character_subtitle","origin","length"],"sources":["C:/Users/Nicolas/Desktop/henry/modules/FT-M2/rick_and_morty/my-app/src/components/Characters/Character.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styles from \"./Characters.module.css\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Character({character}) {\r\n   let [firstEpisodeName, setFirstEpisodeName] = useState(\"\") \r\n   let [statusColor, setStatusColor] = useState(\"\")\r\n\r\n   //getting first episode name\r\n   let firstEpisodeURL  = character.episode[0]\r\n   fetch(firstEpisodeURL)\r\n      .then(resp=>resp.json())\r\n      .then(data=>setFirstEpisodeName(data.name))\r\n\r\n   //getting the status color\r\n   useEffect(()=>{\r\n      switch(character.status){\r\n         case \"Alive\"  : setStatusColor(\"alive\"); break;\r\n         case \"Dead\"   : setStatusColor(\"dead\")  ; break;\r\n         case \"unknown\": setStatusColor(\"unknown\"); break;\r\n         default: setStatusColor(\"unknown\"); break;\r\n      }\r\n   }, [character])\r\n\r\n   return (\r\n      <div className={styles.character_item}>\r\n         <Link to={`/${character.id}`}><img src={character.image} alt=\"\"/></Link>\r\n         <div className={styles.character_info}>\r\n            <h2 className={`character-name`}>{character.name}</h2>\r\n            <div>\r\n               <label className={`${styles.character_statusColor} ${styles[statusColor]}`}></label>\r\n               <label>{character.status} - </label>\r\n               <label>{character.species}</label>\r\n            </div>\r\n            <div className=\"character-origin\">\r\n               <p className={styles.character_subtitle}>Origin:</p>\r\n               <p>{character.origin.name}</p>\r\n            </div>\r\n            <div className=\"character-first_episode\">\r\n               <p className={styles.character_subtitle}>First seen in:</p>\r\n               <p>{firstEpisodeName}</p>\r\n            </div>\r\n            <div className=\"character-num_episodes\">\r\n               <p  className={styles.character_subtitle}>Number of episodes:</p>\r\n               <p>{character.episode.length}</p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}