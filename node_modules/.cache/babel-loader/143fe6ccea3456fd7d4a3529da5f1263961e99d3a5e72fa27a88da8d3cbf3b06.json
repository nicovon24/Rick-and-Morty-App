{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Desktop\\\\henry\\\\modules\\\\FT-M2\\\\rick_and_morty\\\\my-app\\\\src\\\\components\\\\Characters\\\\Characters\\\\Lists.jsx\",\n  _s = $RefreshSig$();\nimport Character from './Character.jsx';\nimport { useContext } from 'react';\nimport { DataContext } from \"../../../context.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTriangleExclamation } from '@fortawesome/free-solid-svg-icons';\nimport styles from \"./Characters.module.css\";\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NormalCharactersList() {\n  _s();\n  let {\n    characters,\n    setCharacters\n  } = useContext(DataContext);\n  const handleRemoveChar = id => setCharacters([...characters.filter(el => el.id !== id)]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: characters.map((person, index) => /*#__PURE__*/_jsxDEV(Character, {\n      character: person,\n      onRemoveChar: handleRemoveChar\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 46\n    }, this))\n  }, void 0, false);\n}\n_s(NormalCharactersList, \"PavcPRdThX+E5b+MTuQok6VHGNw=\");\n_c = NormalCharactersList;\nexport function CreatedCharactersList() {\n  // let [createdCharacters, setCreatedCharacters] = useState();\n  // let createdCharacters = JSON.parse(localStorage.getItem('createdCharacters'))\n  // console.log(createdCharacters);\n\n  const handleRemoveChar = id => {\n    let filter = createdCharacters.filter(el => el.id !== id);\n    localStorage.setItem('createdCharacters', JSON.stringify(filter));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: createdCharacters.length > 0 ? createdCharacters.map((person, index) => /*#__PURE__*/_jsxDEV(Character, {\n      character: person,\n      onRemoveChar: handleRemoveChar,\n      areCreatedOnes: true\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 82\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.none_characters,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faTriangleExclamation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 54\n      }, this), \"There is no characters created\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n_c2 = CreatedCharactersList;\nvar _c, _c2;\n$RefreshReg$(_c, \"NormalCharactersList\");\n$RefreshReg$(_c2, \"CreatedCharactersList\");","map":{"version":3,"names":["Character","useContext","DataContext","FontAwesomeIcon","faTriangleExclamation","styles","useState","NormalCharactersList","characters","setCharacters","handleRemoveChar","id","filter","el","map","person","index","CreatedCharactersList","createdCharacters","localStorage","setItem","JSON","stringify","length","none_characters"],"sources":["C:/Users/Nicolas/Desktop/henry/modules/FT-M2/rick_and_morty/my-app/src/components/Characters/Characters/Lists.jsx"],"sourcesContent":["import Character from './Character.jsx';\r\nimport {useContext} from 'react'\r\nimport {DataContext} from \"../../../context.js\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTriangleExclamation} from '@fortawesome/free-solid-svg-icons'\r\nimport styles from \"./Characters.module.css\"\r\nimport { useState } from 'react';\r\n\r\nexport function NormalCharactersList(){\r\n    let {characters, setCharacters} = useContext(DataContext)\r\n    const handleRemoveChar = (id)=> setCharacters([...characters.filter(el=>el.id!==id)])\r\n    return(\r\n        <>\r\n            {characters.map((person, index)=><Character character={person} onRemoveChar={handleRemoveChar} key={index}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport function CreatedCharactersList(){\r\n    // let [createdCharacters, setCreatedCharacters] = useState();\r\n    // let createdCharacters = JSON.parse(localStorage.getItem('createdCharacters'))\r\n    // console.log(createdCharacters);\r\n\r\n    const handleRemoveChar = (id)=>{\r\n        let filter = createdCharacters.filter(el=>el.id!==id)\r\n        localStorage.setItem('createdCharacters', JSON.stringify(filter))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {createdCharacters.length>0 ? createdCharacters.map((person, index)=><Character character={person}  \r\n            onRemoveChar={handleRemoveChar} \r\n            key={index} areCreatedOnes={true}/>)\r\n            : <h2 className={styles.none_characters}><FontAwesomeIcon icon={faTriangleExclamation}/>There is no characters created</h2>}\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,SAAQC,UAAU,QAAO,OAAO;AAChC,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,qBAAqB,QAAO,mCAAmC;AACxE,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,OAAO,SAASC,oBAAoB,GAAE;EAAA;EAClC,IAAI;IAACC,UAAU;IAAEC;EAAa,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EACzD,MAAMQ,gBAAgB,GAAIC,EAAE,IAAIF,aAAa,CAAC,CAAC,GAAGD,UAAU,CAACI,MAAM,CAACC,EAAE,IAAEA,EAAE,CAACF,EAAE,KAAGA,EAAE,CAAC,CAAC,CAAC;EACrF,oBACI;IAAA,UACKH,UAAU,CAACM,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAG,QAAC,SAAS;MAAC,SAAS,EAAED,MAAO;MAAC,YAAY,EAAEL;IAAiB,GAAMM,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAC,iBAC9G;AAEX;AAAC,GAReT,oBAAoB;AAAA,KAApBA,oBAAoB;AAUpC,OAAO,SAASU,qBAAqB,GAAE;EACnC;EACA;EACA;;EAEA,MAAMP,gBAAgB,GAAIC,EAAE,IAAG;IAC3B,IAAIC,MAAM,GAAGM,iBAAiB,CAACN,MAAM,CAACC,EAAE,IAAEA,EAAE,CAACF,EAAE,KAAGA,EAAE,CAAC;IACrDQ,YAAY,CAACC,OAAO,CAAC,mBAAmB,EAAEC,IAAI,CAACC,SAAS,CAACV,MAAM,CAAC,CAAC;EACrE,CAAC;EAED,oBACI;IAAA,UACKM,iBAAiB,CAACK,MAAM,GAAC,CAAC,GAAGL,iBAAiB,CAACJ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAG,QAAC,SAAS;MAAC,SAAS,EAAED,MAAO;MAClG,YAAY,EAAEL,gBAAiB;MACnB,cAAc,EAAE;IAAK,GAA5BM,KAAK;MAAA;MAAA;MAAA;IAAA,QAAyB,CAAC,gBAClC;MAAI,SAAS,EAAEX,MAAM,CAACmB,eAAgB;MAAA,wBAAC,QAAC,eAAe;QAAC,IAAI,EAAEpB;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAE,kCAA8B;IAAA;MAAA;MAAA;MAAA;IAAA;EAAK,iBAC5H;AAEX;AAAC,MAlBea,qBAAqB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}