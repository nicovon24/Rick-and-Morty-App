{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Desktop\\\\henry\\\\modules\\\\FT-M2\\\\rick_and_morty\\\\my-app\\\\src\\\\components\\\\Characters\\\\Forms\\\\SearchCharacter.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { DataContext } from \"../../../context.js\";\nimport styles from \"./Forms.module.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchCharacter() {\n  _s();\n  let [matchedCharacters, setMatchedCharacters] = useState([]); //characters which match the filter\n  let {\n    setCharacters,\n    initialCharacters,\n    character,\n    setCharacter\n  } = useContext(DataContext);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (character !== \"\") {\n      setMatchedCharacters([]);\n      fetch(`https://rickandmortyapi.com/api/character/?name=${character}`).then(resp => resp.json()).then(data => {\n        if (data.results) setMatchedCharacters([...data.results]);else setMatchedCharacters([]);\n      }).catch(err => setMatchedCharacters([]));\n    } else setMatchedCharacters([...initialCharacters]);\n  };\n  useEffect(() => {\n    setCharacters([...matchedCharacters]);\n  }, [matchedCharacters]);\n  useEffect(() => {\n    if (!character) setCharacters([...initialCharacters]); //the input null, we restore the characters\n  }, [character]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.character_form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.character_filterTitle,\n        children: \"Search a character by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `input_primary ${input}`,\n        value: character,\n        type: \"text\",\n        placeholder: \"Example: Rick...\",\n        onChange: e => setCharacter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), character ? \"\" : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.uncompleted_data,\n        children: \"Uncompleted data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"animated_btn\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SearchCharacter, \"/x8UAk9oEXMgSultz6U+JlE4M48=\");\n_c = SearchCharacter;\nvar _c;\n$RefreshReg$(_c, \"SearchCharacter\");","map":{"version":3,"names":["useContext","useEffect","useState","DataContext","styles","SearchCharacter","matchedCharacters","setMatchedCharacters","setCharacters","initialCharacters","character","setCharacter","handleSubmit","e","preventDefault","fetch","then","resp","json","data","results","catch","err","character_form","character_filterTitle","input","target","value","uncompleted_data"],"sources":["C:/Users/Nicolas/Desktop/henry/modules/FT-M2/rick_and_morty/my-app/src/components/Characters/Forms/SearchCharacter.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\r\nimport {DataContext} from \"../../../context.js\"\r\nimport styles from \"./Forms.module.css\"\r\n\r\nexport default function SearchCharacter(){\r\n    let [matchedCharacters, setMatchedCharacters] = useState([]) //characters which match the filter\r\n    let {setCharacters, initialCharacters, character, setCharacter} = useContext(DataContext)\r\n\r\n    const handleSubmit = e=>{\r\n        e.preventDefault()\r\n        if(character!==\"\"){\r\n            setMatchedCharacters([])\r\n            fetch(`https://rickandmortyapi.com/api/character/?name=${character}`)\r\n                .then(resp=>resp.json())\r\n                .then(data=>{\r\n                    if(data.results) setMatchedCharacters([...data.results])\r\n                    else setMatchedCharacters([])\r\n                })\r\n                .catch(err=>setMatchedCharacters([]))\r\n        }\r\n        else setMatchedCharacters([...initialCharacters])\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setCharacters([...matchedCharacters])\r\n    }, [matchedCharacters])\r\n\r\n    useEffect(()=>{\r\n        if(!character) setCharacters([...initialCharacters]) //the input null, we restore the characters\r\n    }, [character])\r\n\r\n    return(\r\n        <>\r\n            <form className={styles.character_form} onSubmit={handleSubmit}>\r\n                <p className={styles.character_filterTitle}>Search a character by name</p>\r\n                <input className={`input_primary ${input}`} value={character} type=\"text\" placeholder=\"Example: Rick...\" onChange={e=>setCharacter(e.target.value)}></input>\r\n                {character ? \"\" : <p className={styles.uncompleted_data}>Uncompleted data</p>}\r\n                <div>\r\n                    <button className=\"animated_btn\" type=\"submit\"><label>Submit</label></button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAAQC,WAAW,QAAO,qBAAqB;AAC/C,OAAOC,MAAM,MAAM,oBAAoB;AAAA;AAAA;AAEvC,eAAe,SAASC,eAAe,GAAE;EAAA;EACrC,IAAI,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,EAAC;EAC7D,IAAI;IAACM,aAAa;IAAEC,iBAAiB;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAEzF,MAAMS,YAAY,GAAGC,CAAC,IAAE;IACpBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGJ,SAAS,KAAG,EAAE,EAAC;MACdH,oBAAoB,CAAC,EAAE,CAAC;MACxBQ,KAAK,CAAE,mDAAkDL,SAAU,EAAC,CAAC,CAChEM,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAE;QACR,IAAGA,IAAI,CAACC,OAAO,EAAEb,oBAAoB,CAAC,CAAC,GAAGY,IAAI,CAACC,OAAO,CAAC,CAAC,MACnDb,oBAAoB,CAAC,EAAE,CAAC;MACjC,CAAC,CAAC,CACDc,KAAK,CAACC,GAAG,IAAEf,oBAAoB,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC,MACIA,oBAAoB,CAAC,CAAC,GAAGE,iBAAiB,CAAC,CAAC;EACrD,CAAC;EAEDR,SAAS,CAAC,MAAI;IACVO,aAAa,CAAC,CAAC,GAAGF,iBAAiB,CAAC,CAAC;EACzC,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvBL,SAAS,CAAC,MAAI;IACV,IAAG,CAACS,SAAS,EAAEF,aAAa,CAAC,CAAC,GAAGC,iBAAiB,CAAC,CAAC,EAAC;EACzD,CAAC,EAAE,CAACC,SAAS,CAAC,CAAC;EAEf,oBACI;IAAA,uBACI;MAAM,SAAS,EAAEN,MAAM,CAACmB,cAAe;MAAC,QAAQ,EAAEX,YAAa;MAAA,wBAC3D;QAAG,SAAS,EAAER,MAAM,CAACoB,qBAAsB;QAAA,UAAC;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAI,eAC1E;QAAO,SAAS,EAAG,iBAAgBC,KAAM,EAAE;QAAC,KAAK,EAAEf,SAAU;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,kBAAkB;QAAC,QAAQ,EAAEG,CAAC,IAAEF,YAAY,CAACE,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS,EAC3JjB,SAAS,GAAG,EAAE,gBAAG;QAAG,SAAS,EAAEN,MAAM,CAACwB,gBAAiB;QAAA,UAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,eAC7E;QAAA,uBACI;UAAQ,SAAS,EAAC,cAAc;UAAC,IAAI,EAAC,QAAQ;UAAA,uBAAC;YAAA,UAAO;UAAM;YAAA;YAAA;YAAA;UAAA;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAC3E;IAAA;MAAA;MAAA;MAAA;IAAA;EACH,iBACR;AAEX;AAAC,GAvCuBvB,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}