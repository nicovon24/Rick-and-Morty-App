{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Desktop\\\\henry\\\\modules\\\\FT-M2\\\\rick_and_morty\\\\my-app\\\\src\\\\components\\\\Characters\\\\Character.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styles from \"./Characters.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Character(_ref) {\n  _s();\n  let {\n    character\n  } = _ref;\n  let [firstEpisodeName, setFirstEpisodeName] = useState(\"\");\n  let [statusColor, setStatusColor] = useState(\"\");\n\n  //getting first episode name\n  let firstEpisodeURL = character.episode[0];\n  fetch(firstEpisodeURL).then(resp => resp.json()).then(data => setFirstEpisodeName(data.name));\n\n  //getting the status color\n  useEffect(() => {\n    switch (character.status) {\n      case \"Alive\":\n        setStatusColor(\"alive\");\n        break;\n      case \"Dead\":\n        setStatusColor(\"dead\");\n        break;\n      case \"unknown\":\n        setStatusColor(\"unknown\");\n        break;\n      default:\n        setStatusColor(\"unknown\");\n        break;\n    }\n  }, [character]);\n  return /*#__PURE__*/_jsxDEV(NavLink, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(Character, \"6FajVhEpae2J/hxT7w/v3qzQeAk=\");\n_c = Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["useEffect","useState","styles","NavLink","Character","character","firstEpisodeName","setFirstEpisodeName","statusColor","setStatusColor","firstEpisodeURL","episode","fetch","then","resp","json","data","name","status"],"sources":["C:/Users/Nicolas/Desktop/henry/modules/FT-M2/rick_and_morty/my-app/src/components/Characters/Character.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styles from \"./Characters.module.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nexport default function Character({character}) {\r\n   let [firstEpisodeName, setFirstEpisodeName] = useState(\"\") \r\n   let [statusColor, setStatusColor] = useState(\"\")\r\n\r\n   //getting first episode name\r\n   let firstEpisodeURL  = character.episode[0]\r\n   fetch(firstEpisodeURL)\r\n      .then(resp=>resp.json())\r\n      .then(data=>setFirstEpisodeName(data.name))\r\n\r\n   //getting the status color\r\n   useEffect(()=>{\r\n      switch(character.status){\r\n         case \"Alive\"  : setStatusColor(\"alive\"); break;\r\n         case \"Dead\"   : setStatusColor(\"dead\")  ; break;\r\n         case \"unknown\": setStatusColor(\"unknown\"); break;\r\n         default: setStatusColor(\"unknown\"); break;\r\n      }\r\n   }, [character])\r\n\r\n   return (\r\n      <NavLink></NavLink>\r\n   );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAAQC,OAAO,QAAO,kBAAkB;AAAA;AAExC,eAAe,SAASC,SAAS,OAAc;EAAA;EAAA,IAAb;IAACC;EAAS,CAAC;EAC1C,IAAI,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1D,IAAI,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,IAAIS,eAAe,GAAIL,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC;EAC3CC,KAAK,CAACF,eAAe,CAAC,CAClBG,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAET,mBAAmB,CAACS,IAAI,CAACC,IAAI,CAAC,CAAC;;EAE9C;EACAjB,SAAS,CAAC,MAAI;IACX,QAAOK,SAAS,CAACa,MAAM;MACpB,KAAK,OAAO;QAAIT,cAAc,CAAC,OAAO,CAAC;QAAE;MACzC,KAAK,MAAM;QAAKA,cAAc,CAAC,MAAM,CAAC;QAAI;MAC1C,KAAK,SAAS;QAAEA,cAAc,CAAC,SAAS,CAAC;QAAE;MAC3C;QAASA,cAAc,CAAC,SAAS,CAAC;QAAE;IAAM;EAEhD,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,oBACG,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AAEzB;AAAC,GAvBuBD,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}