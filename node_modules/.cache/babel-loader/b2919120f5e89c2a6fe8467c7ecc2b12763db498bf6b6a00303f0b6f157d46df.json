{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicolas\\\\Desktop\\\\henry\\\\modules\\\\FT-M2\\\\rick_and_morty\\\\my-app\\\\src\\\\components\\\\Characters\\\\CharactersList.jsx\",\n  _s = $RefreshSig$();\nimport Character from './Characters/Character.jsx';\nimport { useEffect, useContext } from 'react';\nimport { DataContext } from \"../../context.js\";\nimport FilterCharacter from \"./Forms/FilterCharacter.jsx\";\nimport FormAddCharacter from \"./Forms/AddCharacter.jsx\";\nimport AddButtons from './Forms/AddButtons.jsx';\nimport Page from \"./Page_number/Page_number.jsx\";\nimport styles from \"./Characters.module.css\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CharactersList(_ref) {\n  _s();\n  let {\n    onClose\n  } = _ref;\n  let {\n    page,\n    character,\n    characters,\n    setCharacters\n  } = useContext(DataContext);\n  let [isActiveShowAll, setIsActiveShowAll] = useState(true);\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character?page=${page}`).then(resp => resp.json()).then(data => {\n      setCharacters([...data.results]);\n    });\n  }, [page]);\n  const handleShowCreatedChars = () => setIsActiveShowAll(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.characters_container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.subtitle,\n      children: isActiveShowAll ? \"Characters\" : \"Created Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.characters_subcontainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.characters_menu,\n        children: [/*#__PURE__*/_jsxDEV(FilterCharacter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(FormAddCharacter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(AddButtons, {\n          onShowCreatedChars: handleShowCreatedChars,\n          isActiveShowAll: isActiveShowAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.characters_grid,\n        children: isActiveShowAll ? characters.map((person, index) => /*#__PURE__*/_jsxDEV(Character, {\n          character: person,\n          onClose: onClose\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 67\n        }, this)) : characters.map((person, index) => /*#__PURE__*/_jsxDEV(Character, {\n          character: person,\n          onClose: onClose\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 50\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this), !character && /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(CharactersList, \"3/24iTjtcZLtucbOeucXSGFxXjU=\");\n_c = CharactersList;\nvar _c;\n$RefreshReg$(_c, \"CharactersList\");","map":{"version":3,"names":["Character","useEffect","useContext","DataContext","FilterCharacter","FormAddCharacter","AddButtons","Page","styles","useState","CharactersList","onClose","page","character","characters","setCharacters","isActiveShowAll","setIsActiveShowAll","fetch","then","resp","json","data","results","handleShowCreatedChars","characters_container","subtitle","characters_subcontainer","characters_menu","characters_grid","map","person","index"],"sources":["C:/Users/Nicolas/Desktop/henry/modules/FT-M2/rick_and_morty/my-app/src/components/Characters/CharactersList.jsx"],"sourcesContent":["import Character from './Characters/Character.jsx';\r\nimport { useEffect, useContext } from 'react'\r\nimport {DataContext} from \"../../context.js\"\r\nimport FilterCharacter from \"./Forms/FilterCharacter.jsx\"\r\nimport FormAddCharacter from \"./Forms/AddCharacter.jsx\"\r\nimport AddButtons from './Forms/AddButtons.jsx';\r\nimport Page from \"./Page_number/Page_number.jsx\";\r\nimport styles from \"./Characters.module.css\"\r\nimport { useState } from 'react';\r\n\r\nexport default function CharactersList({onClose}) {\r\n   let {page, character, characters, setCharacters} = useContext(DataContext)\r\n   let [isActiveShowAll, setIsActiveShowAll] = useState(true)\r\n\r\n   useEffect(()=>{\r\n      fetch(`https://rickandmortyapi.com/api/character?page=${page}`)\r\n         .then(resp=>resp.json())\r\n         .then(data=>{\r\n            setCharacters([...data.results])\r\n         })\r\n   }, [page])\r\n\r\n   const handleShowCreatedChars = ()=> setIsActiveShowAll(false)\r\n\r\n   return(\r\n      <div className={styles.characters_container}>\r\n         <p className={styles.subtitle}>{isActiveShowAll ? \"Characters\" : \"Created Characters\"}</p>\r\n         <div className={styles.characters_subcontainer}>\r\n            <div className={styles.characters_menu}>\r\n               <FilterCharacter/>\r\n               <FormAddCharacter/>\r\n               <AddButtons onShowCreatedChars={handleShowCreatedChars} isActiveShowAll={isActiveShowAll}/>\r\n            </div>\r\n            <div className={styles.characters_grid}>\r\n               {isActiveShowAll ? characters.map((person, index)=><Character character={person} onClose={onClose} key={index}/>)\r\n               : characters.map((person, index)=><Character character={person} onClose={onClose} key={index}/>)}\r\n            </div>\r\n         </div>\r\n         {!character && <Page/>}\r\n      </div>\r\n   );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,IAAI,MAAM,+BAA+B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,eAAe,SAASC,cAAc,OAAY;EAAA;EAAA,IAAX;IAACC;EAAO,CAAC;EAC7C,IAAI;IAACC,IAAI;IAAEC,SAAS;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAGb,UAAU,CAACC,WAAW,CAAC;EAC1E,IAAI,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1DR,SAAS,CAAC,MAAI;IACXiB,KAAK,CAAE,kDAAiDN,IAAK,EAAC,CAAC,CAC3DO,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAE;MACTP,aAAa,CAAC,CAAC,GAAGO,IAAI,CAACC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC;EACR,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,MAAMY,sBAAsB,GAAG,MAAKP,kBAAkB,CAAC,KAAK,CAAC;EAE7D,oBACG;IAAK,SAAS,EAAET,MAAM,CAACiB,oBAAqB;IAAA,wBACzC;MAAG,SAAS,EAAEjB,MAAM,CAACkB,QAAS;MAAA,UAAEV,eAAe,GAAG,YAAY,GAAG;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1F;MAAK,SAAS,EAAER,MAAM,CAACmB,uBAAwB;MAAA,wBAC5C;QAAK,SAAS,EAAEnB,MAAM,CAACoB,eAAgB;QAAA,wBACpC,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA,QAAE,eAClB,QAAC,gBAAgB;UAAA;UAAA;UAAA;QAAA,QAAE,eACnB,QAAC,UAAU;UAAC,kBAAkB,EAAEJ,sBAAuB;UAAC,eAAe,EAAER;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACxF,eACN;QAAK,SAAS,EAAER,MAAM,CAACqB,eAAgB;QAAA,UACnCb,eAAe,GAAGF,UAAU,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAG,QAAC,SAAS;UAAC,SAAS,EAAED,MAAO;UAAC,OAAO,EAAEpB;QAAQ,GAAMqB,KAAK;UAAA;UAAA;UAAA;QAAA,QAAG,CAAC,GAC/GlB,UAAU,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAG,QAAC,SAAS;UAAC,SAAS,EAAED,MAAO;UAAC,OAAO,EAAEpB;QAAQ,GAAMqB,KAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QAC7F;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,EACL,CAACnB,SAAS,iBAAI,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEZ;AAAC,GA/BuBH,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}